##
import ssd1306
from oled import oled

char_table=[
  ['A',[254,9,9,254]],
  ['B',[255,137,137,118]],
  ['C',[126,129,129,66]],
  ['D',[255,129,129,126]],
  ['E',[255,137,137,129]],
  ['F',[255,9,9,1]],
  ['G',[255,129,137,249]],
  ['H',[255,8,8,255]],
  ['I',[129, 255, 129]],
  ['J',[64, 129, 129, 127]],
  ['K',[255, 24, 36, 195]],
  ['L',[255, 128, 128, 128]],
  ['M',[255, 2, 4, 2, 255]],
  ['N',[255, 6, 24, 96, 255]],
  ['O',[126, 129, 129, 126]],
  ['P',[255, 9, 9, 6]],
  ['Q',[62, 65, 193, 190]],
  ['R',[255, 25, 105, 134]],
  ['S',[70, 137, 137, 114]],
  ['T',[1, 1, 255, 1, 1]],
  ['U',[127, 128, 128, 127]],
  ['V',[7, 120, 128, 120, 7]],
  ['W',[255, 64, 32, 64, 255]],
  ['X',[195, 36, 24, 36, 195]],
  ['Y',[3, 12, 240, 12, 3]],
  ['Z',[193, 177, 141, 131]],
  ['a',[96, 148, 148, 248]],
  ['b',[255, 132, 132, 120]],
  ['c',[120, 132, 132, 72]],
  ['d',[120, 132, 132, 255]],
  ['e',[120, 148, 148, 88]],
  ['f',[254, 17, 2]],
  ['g',[152, 164, 164, 120]],
  ['h',[255, 8, 4, 248]],
  ['i',[253]],
  ['j',[64, 128, 125]],
  ['k',[255, 32, 80, 136]],
  ['l',[255]],
  ['m',[252, 4, 56, 4, 252]],
  ['n',[252, 8, 4, 248]],
  ['o',[120, 132, 132, 120]],
  ['p',[248, 36, 36, 24]],
  ['q',[24, 36, 36, 248, 128]],
  ['r',[252, 8, 4, 8]],
  ['s',[72, 148, 164, 72]],
  ['t',[8, 254, 136]],
  ['u',[124, 128, 64, 252]],
  ['v',[12, 48, 192, 48, 12]],
  ['w',[252, 64, 32, 64, 252]],
  ['x',[132, 72, 48, 72, 132]],
  ['y',[156 , 160, 160, 124]],
  ['z',[196, 164, 148, 140]],
  ['9',[78, 145, 145, 126]],
  ['8',[118, 137, 137, 118]],
  ['7',[129, 97, 25, 7]],
  ['6',[126, 137, 137, 114]],
  ['5',[79, 137, 137, 113]],
  ['4',[24, 20, 18, 255, 16]],
  ['3',[66, 137, 137, 118]],
  ['2',[226, 145, 137, 134]],
  ['1',[130, 255, 128]],
  ['0',[126, 145, 137, 126]],
  ['(',[60, 66, 129]],
  [')',[129,66,60]],
  ['[',[255,129,129]],
  [']',[129,129,255]],
  ['<',[16, 40, 68]],
  ['>',[68,40,16]],
  ['+',[16, 16, 124, 16,16]],
  ['-',[16,16,16,16]],
  ['_',[128,128,128,128,128]],
  ['=',[40,40,40,40]],
  [' ',[0,0,0]],
  ['!',[191]],
  ['.',[128]],
  ['?',[2, 1, 185, 9, 6]],
  [',',[128,64]],
  ['\'',[3]],
  ['@',[56, 68, 146, 170, 186, 162, 28]],
  ['`',[1,2]],
  ['*',[108, 40, 254, 40, 108]],
  ['\\',[3,12,48,192]],
  ['/',[192,48,12,3]],
  ['#',[32, 232, 56, 238, 56, 46, 8]],
  ['$',[110, 74, 255, 82, 118]],
  ['%',[2, 197, 50, 76, 163, 64]],
  ['^',[4,2,1,2,4]],
  ['&',[96, 150, 153, 169, 70, 160]],
  ['~',[16,8,8,16,16,8]],
  ['"',[3,0,3]],
  [':',[68]],
  [';',[128,68]],
  ['|',[0,255,0]],
  ['{',[8, 8, 118, 129, 129]],
  ['}',[129, 129, 118, 8, 8]]
  ]

def decode(list) :
  matrix = []
  for n in list :
    row = [0,0,0,0,0,0,0,0]
    while n != 0 :
      if n >= 128 :
        row[7] = 1
        n -= 128
        continue

      if n >= 64 :
        row[6] = 1
        n -= 64
        continue

      if n >= 32 :
        row[5] = 1
        n -= 32
        continue

      if n >= 16 :
        row[4] = 1
        n -= 16
        continue

      if n >= 8 :
        row[3] = 1
        n -= 8
        continue

      if n >= 4 :
        row[2] = 1
        n -= 4
        continue

      if n >= 2 :
        row[1] = 1
        n -= 2
        continue

      if n >= 1 :
        row[0] = 1
        n -= 1
        continue

    matrix.append(row)

  return matrix
  
def find_char(character) :
  char_value = [255,255,255]
  for row in char_table :
    if row[0] == character :
      char_value = row[1]
      break
  return char_value
      
def oprint(print_string,x,y,char_spacing,color) :
  characters = list(print_string)
  initial_pos = [x,y]
  matrix = []
  #print(initial_pos)

  for char in characters :

    if x >= 128 - 5 :
      x = initial_pos[0]
      initial_pos[1] += 10

    matrix = find_char(char)
    #print(char)
    character_matrix = decode(matrix)

    for row in character_matrix:
      y = initial_pos[1]
      for pixel in row :
        if pixel == 1 :
          oled.pixel(x,y,color)
        y += 1
      x += 1
    x += char_spacing